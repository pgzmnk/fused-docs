"use strict";(self.webpackChunkfused_docs=self.webpackChunkfused_docs||[]).push([[9349],{8007:(o,t,e)=>{e.r(t),e.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=e(4848),s=e(8453),a=e(8987);e(1023),e(290);const i={title:"Load",sidebar_label:"Load",path:"basics/tutorials/load/load",nb_path:"basics/tutorials/load.ipynb",github:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/load.ipynb",colab:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/load.ipynb",description:"Tutorial on how call UDFs asynchronously with Fused."},r="Python SDK <-> Workbench",l={id:"basics/tutorials/load/Load",title:"Load",description:"Tutorial on how call UDFs asynchronously with Fused.",source:"@site/docs/basics/tutorials/load/Load.mdx",sourceDirName:"basics/tutorials/load",slug:"/basics/tutorials/load/",permalink:"/basics/tutorials/load/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Load",sidebar_label:"Load",path:"basics/tutorials/load/load",nb_path:"basics/tutorials/load.ipynb",github:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/load.ipynb",colab:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/load.ipynb",description:"Tutorial on how call UDFs asynchronously with Fused."},sidebar:"tutorialSidebar",previous:{title:"Ingest",permalink:"/basics/tutorials/ingest/"},next:{title:"Login",permalink:"/basics/tutorials/login/"}},d={},c=[{value:"From local to Workbench",id:"from-local-to-workbench",level:2},{value:"From Workbench to local",id:"from-workbench-to-local",level:2}];function u(o){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...o.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.A,{githubUrl:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/load.ipynb",colabUrl:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/load.ipynb"}),"\n",(0,n.jsx)(t.h1,{id:"python-sdk---workbench",children:"Python SDK <-> Workbench"}),"\n",(0,n.jsx)(t.p,{children:"You can seamlessly load UDFs from a local environment to Workbench, and vice versa."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"# !pip install fused -q\n"})}),"\n",(0,n.jsx)(t.h2,{id:"from-local-to-workbench",children:"From local to Workbench"}),"\n",(0,n.jsxs)(t.p,{children:["Begin by defining a UDF in a local Python environment. Then, upload it to your account's\ncloud database with the ",(0,n.jsx)(t.code,{children:".to_fused"})," method. The UDF's name will be that of the function\nname."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import fused\n\n@fused.udf\ndef my_new_udf():\n  import pandas as pd\n  return pd.DataFrame({"b": [123]})\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"# Verify successful execution\nfused.run(udf=my_new_udf, engine='local')\n"})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"right"}}),(0,n.jsx)(t.th,{style:{textAlign:"right"},children:"b"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"0"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"123"})]})})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"# Upload the UDF to the cloud\nmy_new_udf.to_fused()\n"})}),"\n",(0,n.jsx)(t.h2,{id:"from-workbench-to-local",children:"From Workbench to local"}),"\n",(0,n.jsx)(t.p,{children:"Load a UDF saved in Workbench and run it in a local Python environment."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import fused\n\nloaded_udf = fused.load("plinio@fused.io/my_udf")\nloaded_udf\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"fused.run(udf=loaded_udf, engine='local')\n"})})]})}function h(o={}){const{wrapper:t}={...(0,s.R)(),...o.components};return t?(0,n.jsx)(t,{...o,children:(0,n.jsx)(u,{...o})}):u(o)}},1023:(o,t,e)=>{e.d(t,{A:()=>b});e(6540);var n,s=new Uint8Array(16);function a(){if(!n&&!(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(s)}const i=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const r=function(o){return"string"==typeof o&&i.test(o)};for(var l=[],d=0;d<256;++d)l.push((d+256).toString(16).substr(1));const c=function(o){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=(l[o[t+0]]+l[o[t+1]]+l[o[t+2]]+l[o[t+3]]+"-"+l[o[t+4]]+l[o[t+5]]+"-"+l[o[t+6]]+l[o[t+7]]+"-"+l[o[t+8]]+l[o[t+9]]+"-"+l[o[t+10]]+l[o[t+11]]+l[o[t+12]]+l[o[t+13]]+l[o[t+14]]+l[o[t+15]]).toLowerCase();if(!r(e))throw TypeError("Stringified UUID is invalid");return e};const u=function(o,t,e){var n=(o=o||{}).random||(o.rng||a)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){e=e||0;for(var s=0;s<16;++s)t[e+s]=n[s];return t}return c(n)};var h=e(4848);const b=o=>(0,h.jsxs)("div",{style:{backgroundColor:"var(--ifm-background-surface-color)",marginBottom:"var(--ifm-leading)",borderRadius:"var(--ifm-global-radius)",boxShadow:"var(--ifm-global-shadow-lw)",overflow:"hidden",padding:"10px",font:"var(--ifm-code-font-size) / var(--ifm-pre-line-height) var(--ifm-font-family-monospace)"},children:[(0,h.jsx)("span",{style:{color:"var(--ifm-color-primary)"},children:"Out: "}),(0,h.jsx)("pre",{style:{margin:"0px",backgroundColor:"inherit"},children:o.children.split("\n").map((o=>(0,h.jsx)("p",{style:{marginBottom:"0px"},children:o},u())))})]})},8987:(o,t,e)=>{e.d(t,{A:()=>a});e(6540);var n=e(8774),s=e(4848);const a=o=>{let{githubUrl:t,colabUrl:e}=o;return(0,s.jsxs)("div",{className:"link-buttons",style:{textAlign:"right"},children:[(0,s.jsx)("br",{}),(0,s.jsx)(n.A,{to:e,children:(0,s.jsx)("img",{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open in Colab"})})," ",(0,s.jsx)(n.A,{to:t,children:(0,s.jsx)("img",{src:"https://badgen.net/static/GitHub/Open/blue?icon=github",alt:"Open in GitHub"})})]})}},290:(o,t,e)=>{e(6540);var n=e(3259),s=e.n(n),a=(e(2303),e(4848));s()({loader:()=>e.e(1236).then(e.bind(e,1236)),loading:o=>{let{timedOut:t}=o;return t?(0,a.jsx)("blockquote",{children:"Error: Loading Plotly timed out."}):(0,a.jsx)("div",{children:"loading..."})},timeout:1e4})},8453:(o,t,e)=>{e.d(t,{R:()=>i,x:()=>r});var n=e(6540);const s={},a=n.createContext(s);function i(o){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof o?o(t):{...t,...o}}),[t,o])}function r(o){let t;return t=o.disableParentContext?"function"==typeof o.components?o.components(s):o.components||s:i(o.components),n.createElement(a.Provider,{value:t},o.children)}}}]);