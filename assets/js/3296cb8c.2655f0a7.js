"use strict";(self.webpackChunkfused_docs=self.webpackChunkfused_docs||[]).push([[653],{7865:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>f,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=r(4848),d=r(8453);const s={sidebar_label:"_udf_ops",title:"fused.core._udf_ops"},t=void 0,i={id:"reference/fused/core/_udf_ops",title:"fused.core._udf_ops",description:"load\\udf\\from\\_fused",source:"@site/docs/reference/fused/core/_udf_ops.md",sourceDirName:"reference/fused/core",slug:"/reference/fused/core/_udf_ops",permalink:"/reference/fused/core/_udf_ops",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"_udf_ops",title:"fused.core._udf_ops"},sidebar:"tutorialSidebar",previous:{title:"_table_ops",permalink:"/reference/fused/core/_table_ops"},next:{title:"experimental",permalink:"/reference/fused/experimental"}},l={},c=[{value:"load_udf_from_fused",id:"load_udf_from_fused",level:2},{value:"load_udf_from_github",id:"load_udf_from_github",level:2}];function u(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"load_udf_from_fused",children:"load_udf_from_fused"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"def load_udf_from_fused(email_or_id: str,\n                        id: Optional[str] = None,\n                        *,\n                        cache_key: Any = None) -> BaseUdf\n"})}),"\n",(0,o.jsx)(n.p,{children:"Download the code of a UDF, to be run inline."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"email_or_id"})," - Email of the UDF's owner, or name of the UDF to import."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"id"})," - Name of the UDF to import. If only the first argument is provided, the current user's email will be used."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cache_key"})," - Additional cache key for busting the UDF cache."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"load_udf_from_github",children:"load_udf_from_github"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"def load_udf_from_github(url: str, *, cache_key: Any = None) -> BaseUdf\n"})}),"\n",(0,o.jsx)(n.p,{children:"Download the code of a UDF, to be run inline."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"email_or_id"})," - Email of the UDF's owner, or name of the UDF to import."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"id"})," - Name of the UDF to import. If only the first argument is provided, the current user's email will be used."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cache_key"})," - Additional cache key for busting the UDF cache."]}),"\n"]})]})}function f(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>i});var o=r(6540);const d={},s=o.createContext(d);function t(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);