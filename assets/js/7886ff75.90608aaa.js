"use strict";(self.webpackChunkfused_docs=self.webpackChunkfused_docs||[]).push([[9460],{104:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>c});var i=s(4848),t=s(8453),o=s(3514);const d={},a="Python SDK",r={id:"python-sdk/index",title:"Python SDK",description:"The Fused Python SDK (fused-py) supercharges your team's workflows and maps in Jupyter notebooks, low-code web apps, the Fused Workbench webapp, ETL, or any tool in your stack that runs Python.",source:"@site/docs/python-sdk/index.mdx",sourceDirName:"python-sdk",slug:"/python-sdk/",permalink:"/fused-docs/python-sdk/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FAQ",permalink:"/fused-docs/basics/faq"},next:{title:"Top-Level Functions",permalink:"/fused-docs/python-sdk/top-level-functions"}},l={},c=[{value:"Documentation overview",id:"documentation-overview",level:2},{value:"Install",id:"install",level:2},{value:"Quickstart",id:"quickstart",level:2},{value:"Load a UDF",id:"load-a-udf",level:2},{value:"Run a UDF",id:"run-a-udf",level:2},{value:"Run as File",id:"run-as-file",level:3},{value:"Run as Tile",id:"run-as-tile",level:3},{value:"a) With <code>lat</code>, <code>lng</code>, <code>z</code> parameters",id:"a-with-lat-lng-z-parameters",level:4},{value:"b) With <code>x</code>, <code>y</code> , <code>z</code> parameters",id:"b-with-x-y--z-parameters",level:4},{value:"c) Shapely box (coming soon)",id:"c-shapely-box-coming-soon",level:4},{value:"d) Shapely polygon (coming soon)",id:"d-shapely-polygon-coming-soon",level:4},{value:"e) GeoDataFrame",id:"e-geodataframe",level:4},{value:"Save a UDF",id:"save-a-udf",level:2},{value:"Typing",id:"typing",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"python-sdk",children:"Python SDK"}),"\n",(0,i.jsxs)(n.p,{children:["The Fused Python SDK (",(0,i.jsx)(n.code,{children:"fused-py"}),") supercharges your team's workflows and maps in Jupyter notebooks, low-code web apps, the Fused Workbench webapp, ETL, or any tool in your stack that runs Python."]}),"\n",(0,i.jsx)(n.p,{children:"With the SDK, development code runs on production cloud resources. This shields your team from the need to translate code or transfer data between frameworks. Fused automatically provisions and manages cloud resources - so developers can focus on writing code."}),"\n",(0,i.jsx)(n.h2,{id:"documentation-overview",children:"Documentation overview"}),"\n","\n","\n",(0,i.jsx)(o.A,{}),"\n",(0,i.jsx)(n.h2,{id:"install",children:"Install"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"fused-py"})," is a breeze to get started with."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Set up a Python environment:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python3 -m venv .venv\nsource .venv/bin/activate\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Run:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install fused\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Fused support Python versions ",(0,i.jsx)(n.code,{children:">=3.8"})," to ",(0,i.jsx)(n.code,{children:"<3.12"}),"."]})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Authenticate:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"from fused import NotebookCredentials\ncredentials = NotebookCredentials()\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Run this snippet from a Notebook Cell and follow the authentication flow, which will store a credentials file in ",(0,i.jsx)(n.code,{children:"~/.fused/credentials"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"quickstart",children:"Quickstart"}),"\n",(0,i.jsxs)(n.p,{children:["This snippet shows how to import then run a UDF from the ",(0,i.jsx)(n.a,{href:"https://github.com/fusedio/udfs/tree/main",children:"UDF catalog GitHub repo"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import fused\n\nudf = fused.load("https://github.com/fusedio/udfs/tree/main/public/DuckDB_NYC_Example")\ngdf = udf.run_local()\ngdf\n'})}),"\n",(0,i.jsx)(n.p,{children:"Similarly, as a bash oneliner."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"python -c \"import fused; gdf = fused.load('https://github.com/fusedio/udfs/tree/main/public/DuckDB_NYC_Example').run_local(); print(gdf);\"\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The following ",(0,i.jsx)(n.a,{href:"/python-sdk/top-level-functions/",children:'"API Reference"'})," sections show how to write, manage, and run UDFs, as well as the different utility functions designed to make your life easiy."]}),"\n",(0,i.jsxs)(n.p,{children:["The main thing to remember at this point is that UDFs are simply Python functions decorated with ",(0,i.jsx)(n.code,{children:"@fused.udf"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"load-a-udf",children:"Load a UDF"}),"\n",(0,i.jsxs)(n.p,{children:["Loading UDFs is a fundamental aspect of collaborative and streamlined workflows. It fosters discoverability within teams and the ",(0,i.jsx)(n.a,{href:"https://github.com/fusedio/udfs/tree/main",children:"UDF community"}),", promotes reuse of existing code, and simplifies your code."]}),"\n",(0,i.jsx)(n.p,{children:"UDFs can be loaded from various sources, including GitHub repositories, local files, and the Fused cloud."}),"\n",(0,i.jsx)(n.p,{children:"Loading a UDF from a GitHub URL:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:'udf = fused.load("https://github.com/fusedio/udfs/tree/main/public/REM_with_HyRiver/")\n'})}),"\n",(0,i.jsx)(n.p,{children:"Loading a UDF from a local file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:'udf = fused.load("/localpath/REM_with_HyRiver/")\n'})}),"\n",(0,i.jsx)(n.p,{children:"Loading a UDF using a Fused platform-specific identifier:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:'udf = fused.load("username@fused.io/REM_with_HyRiver")\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Loading UDFs from GitHub repositories or local files do not require authentication to the Fused platform."})}),"\n",(0,i.jsx)(n.h2,{id:"run-a-udf",children:"Run a UDF"}),"\n",(0,i.jsxs)(n.p,{children:["\u261d\ufe0f Read more about File & Tile execution modes in the ",(0,i.jsx)(n.a,{href:"/basics/core-concepts/#execution-modes",children:"core concepts section"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Once a UDF is loaded, running it executes the parametrized function code and returns the function output."}),"\n",(0,i.jsxs)(n.p,{children:["UDFs by default run as a single operation, called ",(0,i.jsx)(n.code,{children:"File"})," mode, and can run as spatially partitioned, called ",(0,i.jsx)(n.code,{children:"Tile"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"File"}),". By default, UDFs run as a single operation and return all data in one call. This option is suitable for localized and smaller outputs where fetching the entire dataset at once is feasible."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Tile"}),". In this mode, UDFs process data for specific geographic areas defined by predefined bounding boxes. These bounding boxes can be specified in various ways. This option is suitable for datasets that cover geographic extents and allow for spatial queries. Compute tasks are distributed among worker, with each worker processing only the fraction of data corresponding to a specific ",(0,i.jsx)(n.a,{href:"https://deck.gl/docs/api-reference/geo-layers/tile-layer",children:"tile"}),". This enables parallel processing and efficient computation."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Deciding which to use is based on the underlying dataset and on the client mechanism. This is specified by parameters of the ",(0,i.jsx)(n.code,{children:"fused.run"})," convenience function."]}),"\n",(0,i.jsx)(n.h3,{id:"run-as-file",children:"Run as File"}),"\n",(0,i.jsx)(n.p,{children:"To run as File, a UDF definition is run without specifying geometry parameters."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import fused\n\nudf = fused.load("https://github.com/fusedio/udfs/tree/main/public/DuckDB_NYC_Example")\ngdf = fused.run(udf=udf)\ngdf\n'})}),"\n",(0,i.jsx)(n.h3,{id:"run-as-tile",children:"Run as Tile"}),"\n",(0,i.jsxs)(n.p,{children:["To run as a Tile, a UDF definition needs to have its initial parameter specified as ",(0,i.jsx)(n.code,{children:"bbox"}),", serving as a reserved keyword parameter. When this bounding box parameter is specified, UDFs slice data based on the bounds of individual tiles."]}),"\n",(0,i.jsxs)(n.p,{children:["When a UDF is called with parameters that specify a tile, Fused will convert them to the corresponding ",(0,i.jsx)(n.code,{children:"bbox"}),". Below are the different ways to specify tiles."]}),"\n",(0,i.jsxs)(n.h4,{id:"a-with-lat-lng-z-parameters",children:["a) With ",(0,i.jsx)(n.code,{children:"lat"}),", ",(0,i.jsx)(n.code,{children:"lng"}),", ",(0,i.jsx)(n.code,{children:"z"})," parameters"]}),"\n",(0,i.jsxs)(n.p,{children:["See the ",(0,i.jsx)(n.a,{href:"https://mercantile.readthedocs.io/en/stable/api/mercantile.html",children:"documentation"})," for the ",(0,i.jsx)(n.code,{children:"mercantile"})," Python library, for reference."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import fused\n\nudf = fused.load("https://github.com/fusedio/udfs/tree/main/public/DEM_10m_Tile_Example")\nfused.run(udf=udf, lat=37.1, lng=-122.0, z=13)\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"b-with-x-y--z-parameters",children:["b) With ",(0,i.jsx)(n.code,{children:"x"}),", ",(0,i.jsx)(n.code,{children:"y"})," , ",(0,i.jsx)(n.code,{children:"z"})," parameters"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import fused\n\n# Load and run UDF\nudf = fused.load("https://github.com/fusedio/udfs/tree/main/public/DEM_10m_Tile_Example")\nfused.run(udf=udf, x=2411, y=3079, z=13)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"c-shapely-box-coming-soon",children:"c) Shapely box (coming soon)"}),"\n",(0,i.jsxs)(n.p,{children:["Specify the bounding box with a ",(0,i.jsx)(n.code,{children:"shapely.geometry.box"})," type."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import fused\nfrom shapely.geometry import box\n\n# Load and run UDF\nudf = fused.load("https://github.com/fusedio/udfs/tree/main/public/LULC_Tile_Example")\nfused.run(udf=udf, bbox=box(-77.34375, 38.41055, -77.167968, 38.54816))\n\n'})}),"\n",(0,i.jsx)(n.h4,{id:"d-shapely-polygon-coming-soon",children:"d) Shapely polygon (coming soon)"}),"\n",(0,i.jsxs)(n.p,{children:["Specify the bounding box with a ",(0,i.jsx)(n.code,{children:"shapely.geometry.Polygon"})," type."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import fused\nfrom shapely.geometry import Polygon\n\n# Define bbox polygon\npolygon = Polygon([[-77.16796, 38.54816], [-77.16796, 38.41055], [-77.34375, 38.41055], [-77.34375, 38.54816], [-77.16796, 38.54816]])\n\n# Load and run UDF\nudf = fused.load("https://github.com/fusedio/udfs/tree/main/public/LULC_Tile_Example")\nfused.run(udf=udf, bbox=polygon)\n'})}),"\n",(0,i.jsx)(n.h4,{id:"e-geodataframe",children:"e) GeoDataFrame"}),"\n",(0,i.jsxs)(n.p,{children:["Specify the bounding box with a ",(0,i.jsx)(n.code,{children:"geopandas.geodataframe.GeoDataFrame"})," type."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import fused\nimport geopandas as gpd\n\n# Define GeoDataFrame\ngdf = gpd.read_file(\'{"geometry": {"type": "Polygon", "coordinates": [[[-77.16796875, 38.54816542304658], [-77.16796875, 38.410558250946075], [-77.34375, 38.410558250946075], [-77.34375, 38.54816542304658], [-77.16796875, 38.54816542304658]]]}}]\')\n\n# Load and run UDF\nudf = fused.load("https://github.com/fusedio/udfs/tree/main/public/LULC_Tile_Example")\nfused.run(udf=udf, bbox=gdf)\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"fused.run"})," convenience function wraps ",(0,i.jsx)(n.a,{href:"/reference/fused/core/_realtime_ops/#run_tile",children:"run_tile"})," and ",(0,i.jsx)(n.a,{href:"/reference/fused/core/_realtime_ops/#run_file",children:"run_file"})," functions, which can optionally be used."]})}),"\n",(0,i.jsx)(n.h2,{id:"save-a-udf",children:"Save a UDF"}),"\n",(0,i.jsx)(n.p,{children:"UDFs can be saved to the local file system, to the Fused cloud, and to GitHub."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["UDFs saved to the Fused cloud can be used as ",(0,i.jsx)(n.a,{href:"/basics/utilities/#hosted-api",children:"HTTP endpoints"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["UDFs saved to the local file system or GitHub can be loaded with ",(0,i.jsx)(n.code,{children:"fused.load"})," as described above."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"First, create a UDF object."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import fused\n\n@fused.udf\ndef my_udf():\n    return "Hello from Fused!"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Save locally as a directory:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'my_udf.to_directory("my_udf")\n'})}),"\n",(0,i.jsx)(n.p,{children:"Save locally as a .zip file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'my_udf.to_file("my_udf.zip")\n'})}),"\n",(0,i.jsx)(n.p,{children:"Save to a GitHub gist:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"my_udf.to_gist()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Save remotely to Fused (under the same name as the function object):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"my_udf.to_fused()\n"})}),"\n",(0,i.jsxs)(n.p,{children:["UDFs saved to file systems are structured as a directory, which makes them easy to share and transport. Each UDF, like ",(0,i.jsx)(n.code,{children:"Sample_UDF"}),", is contained within its own subdirectory within the ",(0,i.jsx)(n.code,{children:"public"})," directory - along with its documentation, code, metadata, and utility function code. This means they can be thought of as a standalone Python package."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u2514\u2500\u2500 Sample_UDF\n    \u251c\u2500\u2500 README.MD\n    \u251c\u2500\u2500 Sample_UDF.py\n    \u251c\u2500\u2500 meta.json\n    \u2514\u2500\u2500 utils.py\n"})}),"\n",(0,i.jsx)(n.p,{children:"Files relevant to each UDF are:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"README.md"})," Provides details of the UDF's purpose and how it works."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Sample_UDF.py"})," This eponymous Python file contains the UDF's business logic as a Python function decorated with ",(0,i.jsx)(n.code,{children:"@fused.udf"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"meta.json"})," This file contains metadata needed to render the UDF in the Fused explorer and for the UDF to run correctly."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"utils.py"})," This Python file contains helper functions the UDF (optionally) imports and references."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"typing",children:"Typing"}),"\n",(0,i.jsxs)(n.p,{children:["Fused UDFs support ",(0,i.jsx)(n.a,{href:"https://peps.python.org/pep-0484/",children:"Python function annotations"}),". Annotated parameters convert to the specified type before the UDF is called."]}),"\n",(0,i.jsx)(n.p,{children:"This is important to ensure that parameters serialized on HTTP calls resolve to the intended type. For example, the UDF below takes an integer and a dictionary, and is annotated as follows."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from typing import Dict\nimport fused\n\n@fused.udf\ndef udf(my_param: int, my_dict: Dict):\n    print(my_param, type(my_param)) # int\n    print(my_dict, type(my_dict)) # Dict\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This feature is under active development. Presently supported types are ",(0,i.jsx)(n.code,{children:"int"}),", ",(0,i.jsx)(n.code,{children:"float"}),", ",(0,i.jsx)(n.code,{children:"bool"}),", ",(0,i.jsx)(n.code,{children:"list"}),", ",(0,i.jsx)(n.code,{children:"dict"}),", ",(0,i.jsx)(n.code,{children:"List"}),", ",(0,i.jsx)(n.code,{children:"Dict"}),", ",(0,i.jsx)(n.code,{children:"Iterable"}),", ",(0,i.jsx)(n.code,{children:"uuid.UUID"}),", ",(0,i.jsx)(n.code,{children:"Optional[]"}),", and ",(0,i.jsx)(n.code,{children:"gpd.GeoDataFrame"})," from a geojson. ",(0,i.jsx)(n.code,{children:"Union"})," is not supported. Parameters that are not annotated are handled as string."]}),"\n",(0,i.jsxs)(n.p,{children:["Fused also exposes special types to specify whether the output in Workbench should be handled as ",(0,i.jsxs)(n.a,{href:"/basics/core-concepts/#udf-execution-modes-file-tile",children:[(0,i.jsx)(n.code,{children:"Tile"})," or ",(0,i.jsx)(n.code,{children:"File"})]}),". These are ",(0,i.jsx)(n.code,{children:"fused.types.TileXYZ"})," and ",(0,i.jsx)(n.code,{children:"fused.types.TileGDF"})," respectively. The ",(0,i.jsx)(n.code,{children:"bbox"})," parameter is typed as ",(0,i.jsx)(n.code,{children:"fused.types.Bbox"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},3514:(e,n,s)=>{s.d(n,{A:()=>j});s(6540);var i=s(4164),t=s(1754),o=s(8774),d=s(6654),a=s(1312),r=s(1107);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var c=s(4848);function h(e){let{href:n,children:s}=e;return(0,c.jsx)(o.A,{href:n,className:(0,i.A)("card padding--lg",l.cardContainer),children:s})}function u(e){let{href:n,icon:s,title:t,description:o}=e;return(0,c.jsxs)(h,{href:n,children:[(0,c.jsxs)(r.A,{as:"h2",className:(0,i.A)("text--truncate",l.cardTitle),title:t,children:[s," ",t]}),o&&(0,c.jsx)("p",{className:(0,i.A)("text--truncate",l.cardDescription),title:o,children:o})]})}function p(e){let{item:n}=e;const s=(0,t.Nr)(n);return s?(0,c.jsx)(u,{href:s,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??(0,a.T)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n.items.length})}):null}function f(e){let{item:n}=e;const s=(0,d.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",i=(0,t.cC)(n.docId??void 0);return(0,c.jsx)(u,{href:n.href,icon:s,title:n.label,description:n.description??i?.description})}function m(e){let{item:n}=e;switch(n.type){case"link":return(0,c.jsx)(f,{item:n});case"category":return(0,c.jsx)(p,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function x(e){let{className:n}=e;const s=(0,t.$S)();return(0,c.jsx)(j,{items:s.items,className:n})}function j(e){const{items:n,className:s}=e;if(!n)return(0,c.jsx)(x,{...e});const o=(0,t.d1)(n);return(0,c.jsx)("section",{className:(0,i.A)("row",s),children:o.map(((e,n)=>(0,c.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,c.jsx)(m,{item:e})},n)))})}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>a});var i=s(6540);const t={},o=i.createContext(t);function d(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);