"use strict";(self.webpackChunkfused_docs=self.webpackChunkfused_docs||[]).push([[1116],{2341:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>h});var n=s(4848),i=s(8453),a=s(8987),r=s(1023);s(290);const o={title:"DuckDB",sidebar_label:"DuckDB",path:"basics/tutorials/duckdb/duckdb",nb_path:"basics/tutorials/duckdb.ipynb",github:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/duckdb.ipynb",colab:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/duckdb.ipynb",description:"Tutorial on how call UDFs asynchronously with Fused."},l="DuckDB",d={id:"basics/tutorials/duckdb/Duckdb",title:"DuckDB",description:"Tutorial on how call UDFs asynchronously with Fused.",source:"@site/docs/basics/tutorials/duckdb/Duckdb.mdx",sourceDirName:"basics/tutorials/duckdb",slug:"/basics/tutorials/duckdb/",permalink:"/fused-docs/basics/tutorials/duckdb/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"DuckDB",sidebar_label:"DuckDB",path:"basics/tutorials/duckdb/duckdb",nb_path:"basics/tutorials/duckdb.ipynb",github:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/duckdb.ipynb",colab:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/duckdb.ipynb",description:"Tutorial on how call UDFs asynchronously with Fused."},sidebar:"tutorialSidebar",previous:{title:"Call UDFs async",permalink:"/fused-docs/basics/tutorials/async/"},next:{title:"H3 NYC Taxi Fare by CBG",permalink:"/fused-docs/basics/tutorials/h3-nyctaxi-face"}},c={},h=[{value:"1. Run DuckDB in a Fused UDF",id:"1-run-duckdb-in-a-fused-udf",level:2},{value:"2. Call Fused UDFs from DuckDB",id:"2-call-fused-udfs-from-duckdb",level:2},{value:"3. Integrate DuckDB in applications using Fused",id:"3-integrate-duckdb-in-applications-using-fused",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.A,{githubUrl:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/duckdb.ipynb",colabUrl:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/duckdb.ipynb"}),"\n",(0,n.jsx)(t.h1,{id:"duckdb",children:"DuckDB"}),"\n",(0,n.jsx)(t.p,{children:"The combination of Fused serverless operations and DuckDB offers blazing fast data\nprocessing. Fused has long embraced Python for its serverless User Defined Functions\n(UDFs). Now, with the help of DuckDB, Fused enables developers to leverage the ease and\nfamiliarity of SQL in these functions as well \u2014 without compromising on performance and\nparallelism."}),"\n",(0,n.jsxs)(t.p,{children:["This notebook is support material for the blog post\n",(0,n.jsx)(t.a,{href:"https://medium.com/@fused/duckdb-fused-fly-beyond-the-serverless-horizon-886d892834aa",children:"DuckDB + Fused: Fly beyond the serverless horizon"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"1-run-duckdb-in-a-fused-udf",children:"1. Run DuckDB in a Fused UDF"}),"\n",(0,n.jsxs)(t.p,{children:['As an example of running DuckDB within a Fused UDF, take the case of loading a\ngeospatial Parquet dataset. The "DuckDB H3" sample UDF runs an SQL query with DuckDB on\nthe NYC Taxi Trip Record\n',(0,n.jsx)(t.a,{href:"https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page",children:"Dataset"}),". It uses the\n",(0,n.jsx)(t.a,{href:"https://docs.fused.io/basics/core-concepts/#the-bbox-object",children:"bbox"})," argument to\nspatially filter the dataset and automatically parallelize the operation."]}),"\n",(0,n.jsxs)(t.p,{children:["To try this example, you can run the cell below. You can find the code of the UDF in the\nFused public UDF\n",(0,n.jsx)(t.a,{href:"https://github.com/fusedio/udfs/tree/main/public/DuckDB_H3_Example_Tile",children:"repo"}),"."]}),"\n",(0,n.jsx)(t.p,{children:'Alternatively, you can import the "DuckDB H3 Example Tile" UDF into your Fused Workbench\nenvironment.'}),"\n",(0,n.jsx)(t.p,{children:"This pattern gives DuckDB easy parallel operations. Fused spatially filters the dataset\nvia the bbox parameter, runs the operation for each encompassing tile, and stitches the\nresults together. Because Fused breaks down operations to only a fraction of the\ndataset, it's easy to transition between SQL and Python."}),"\n",(0,n.jsx)("img",{src:"https://fused-magic.s3.us-west-2.amazonaws.com/docs_assets/nyc.png",alt:"overture",width:"600"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'# !pip install fused "duckdb>=0.10.1" -q\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"import fused\n\nudf = fused.load(\"https://github.com/fusedio/udfs/tree/main/public/DuckDB_H3_Example_Tile\")\ngdf = fused.run(udf=udf, x=2412, y=3078, z=13, engine='local')\ngdf.head()\n"})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"right"}}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"cell_id"}),(0,n.jsx)(t.th,{style:{textAlign:"right"},children:"cell_lat"}),(0,n.jsx)(t.th,{style:{textAlign:"right"},children:"cell_lng"}),(0,n.jsx)(t.th,{style:{textAlign:"right"},children:"cnt"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"geometry"}),(0,n.jsx)(t.th,{style:{textAlign:"right"},children:"fused_index"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"0"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"8b2a100d692cfff"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"40.7691"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"-73.9611"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"6219"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"POLYGON ((-73.96110 40.76935, -73.96140 40.769..."}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"0"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"1"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"8b2a100d6796fff"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"40.7586"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"-73.9858"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"6132"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"POLYGON ((-73.98577 40.75886, -73.98607 40.758..."}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"1"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"2"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"8b2a100d2922fff"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"40.7509"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"-73.9766"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"2324"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"POLYGON ((-73.97660 40.75118, -73.97691 40.751..."}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"2"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"3"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"8b2a100d6754fff"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"40.7562"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"-73.9786"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"2174"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"POLYGON ((-73.97864 40.75641, -73.97894 40.756..."}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"3"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"4"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"8b2a100d2d95fff"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"40.7527"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"-73.9932"}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"4826"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"POLYGON ((-73.99319 40.75299, -73.99349 40.752..."}),(0,n.jsx)(t.td,{style:{textAlign:"right"},children:"4"})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"2-call-fused-udfs-from-duckdb",children:"2. Call Fused UDFs from DuckDB"}),"\n",(0,n.jsx)(t.p,{children:"Any database that supports querying data via HTTP can call and load data from Fused UDF\nendpoints using common formats like Parquet or CSV. This means that DuckDB can dispatch\noperations to Fused that otherwise would be too complex or impossible to express with\nSQL, or would be unsupported in the local runtime."}),"\n",(0,n.jsx)(t.p,{children:"As an example of calling a Fused endpoint from within DuckDB, take an operation to\nvectorize a raster dataset. This might be necessary to determine the bounds of areas\nwith pixel value within a certain threshold range in an Earth observation image\u200a-\u200asuch\nas a Digital Elevation Model. SQL is not geared to support raster operations, but these\nare easy to do in Python."}),"\n",(0,n.jsx)("img",{src:"https://fused-magic.s3.us-west-2.amazonaws.com/docs_assets/gifs/sql.gif",alt:"overture",width:"600"}),"\n",(0,n.jsxs)(t.p,{children:["In this example, a Fused UDF returns a table where each record is a polygon generated\nfrom the contour of a raster provided by the\n",(0,n.jsx)(t.a,{href:"https://spacedata.copernicus.eu/collections/copernicus-digital-elevation-model",children:"Copernicus Digital Elevation Model"}),"\nas a ",(0,n.jsx)(t.a,{href:"https://www.cogeo.org/",children:"Cloud Optimized GeoTIFF"}),". DuckDB can easily trigger a UDF\nand load its output with this simple query, which specifies that the UDF endpoint\nreturns a Parquet file."]}),"\n",(0,n.jsxs)(t.p,{children:["This SQL query uses DuckDB's\n",(0,n.jsx)(t.a,{href:"https://duckdb.org/docs/data/parquet/overview.html",children:"read_parquet"}),' function to call an\nendpoint of a UDF instance of the "DEM Raster to Vector" UDF.']}),"\n",(0,n.jsxs)(t.p,{children:["You can find the code of the UDF in the Fused public UDF\n",(0,n.jsx)(t.a,{href:"https://github.com/fusedio/udfs/tree/main/public/DEM_Raster_to_Vector_Example",children:"repo"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["To try this example, simply run the following SQL query on the cell below or in a\n",(0,n.jsx)(t.a,{href:"https://shell.duckdb.org/#queries=v0,SELECT-wkt%2C-area%0AFROM-read_csv('https%3A%2F%2Fwww.fused.io%2Fserver%2Fv1%2Frealtime%20shared%2F'-%7C%7C%0A'1e35c9b9cadf900265443073b0bd99072f859b8beddb72a45e701fb5bcde807d'-%7C%7C%0A'%2Frun%2Ffile%3Fdtype_out_vector%3Dcsv'-%7C%7C%0A'%26min_elevation%3D500')%0ALIMIT-10~",children:"DuckDB shell"}),".\nChange the ",(0,n.jsx)(t.code,{children:"min_elevation"})," parameter to run the UDF for parts of California at different\nelevations. (Note: for DuckDB WASM, the file will be requested as CSV.)"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import duckdb\n\ncon = duckdb.connect()\n\ncon.sql("""\n    SELECT \n        wkt, \n        ROUND(area,1) AS area\n    FROM read_parquet(\'https://www.fused.io/server/v1/realtime-shared/1e35c9b9cadf900265443073b0bd99072f859b8beddb72a45e701fb5bcde807d/run/file?min_elevation=500&dtype_out_vector=parquet\')\n    LIMIT 5\n""")\n\n'})}),"\n",(0,n.jsx)(r.A,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                                  wkt                                                   \u2502    area     \u2502\n\u2502                                                varchar                                                 \u2502   double    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 POLYGON ((-124.1827015175656186 42.2400766748579528, -124.1827015175656186 42.1992724119226850, -124\u2026  \u2502  15409410.3 \u2502\n\u2502 POLYGON ((-124.3052742356768618 42.2808809377932349, -124.1827015175656186 42.2808809377932207, -124\u2026  \u2502 138751711.8 \u2502\n\u2502 POLYGON ((-124.3869893810843479 42.1176638860521493, -124.3869893810843479 42.0768596231168956, -124\u2026  \u2502  15447026.2 \u2502\n\u2502 POLYGON ((-124.2235590902693616 42.1176638860521564, -124.2235590902693616 42.0360553601816278, -124\u2026  \u2502  30891651.3 \u2502\n\u2502 POLYGON ((-124.1827015175656186 41.7912297825700350, -124.1827015175656186 41.7504255196347742, -124\u2026  \u2502  15518755.9 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"}),"\n",(0,n.jsx)(t.p,{children:"This pattern enables DuckDB to address use cases and data formats that it doesn't\nnatively support or would otherwise see high data transfer cost, such as raster\noperations, API calls, and control flow logic."}),"\n",(0,n.jsx)(t.h2,{id:"3-integrate-duckdb-in-applications-using-fused",children:"3. Integrate DuckDB in applications using Fused"}),"\n",(0,n.jsx)(t.p,{children:"Fused is the glue layer between DuckDB and apps. This enables seamless integrations that\ntrigger Fused UDFs and load their results with simple parameterized HTTP calls."}),"\n",(0,n.jsx)(t.p,{children:"DuckDB is an embedded database engine and doesn't have built-in capability to share\nresults other than writing out files. As a corollary of the preceding example, it's\npossible to query and transform data with DuckDB and seamlessly integrate the results of\nqueries into any workflow or app."}),"\n",(0,n.jsxs)(t.p,{children:["As an example, take the case of loading the output of a DuckDB query into Google Sheets.\nSheets can easily structure the Fused UDF endpoint to pass parameters defined in\nspecific cells as URL query parameters. In this example, the\n",(0,n.jsx)(t.a,{href:"https://support.google.com/docs/answer/3093335?hl=en",children:"importData"})," command calls the\nendpoint for the UDF above and loads its output data in CSV format. It constructs the\nendpoint string by concatenating a base URL with the ",(0,n.jsx)(t.code,{children:"B2"}),", ",(0,n.jsx)(t.code,{children:"B3"}),", and ",(0,n.jsx)(t.code,{children:"B4"})," cell values as\nquery parameters."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'=importData(CONCATENATE("https://www.fused.io/server/v1/realtime-shared/aba7b238d9445d576e15b2d6b780dc353bfdee55f02a285a85a3917b72835600/run/file?dtype_out_vector=csv&resolution=", B2, "&min_count=", B3, "&head=", B4))\n'})}),"\n",(0,n.jsx)("img",{src:"https://fused-magic.s3.us-west-2.amazonaws.com/docs_assets/gifs/sheets.gif",alt:"overture",width:"600"}),"\n",(0,n.jsxs)(t.p,{children:["To try this example simply make a copy of\n",(0,n.jsx)(t.a,{href:"https://docs.google.com/spreadsheets/d/1iufyjEct5bQjYAI8v1Mb5e29yG8ukzH4X8MD6oP1xLQ/edit?usp=sharing",children:"this"}),"\nGoogle Sheets spreadsheet (File > Make a copy) and click, and modify the parameters in\n",(0,n.jsx)(t.code,{children:"B2:4"})," to trigger the Fused UDF endpoint and load data."]}),"\n",(0,n.jsxs)(t.p,{children:["You can learn more about the Google Sheets integration in the\n",(0,n.jsx)(t.a,{href:"/basics/out/googlesheets/",children:"documentation"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"This pattern brings the power of the DuckDB analytical engine into non-analytical and\nno-code software like Google Sheets, Retool, and beyond\u200a-\u200awithout the need to build\nbespoke integrations with closed-source systems. With this, a Python developer can\nabstract away the UDF and deliver data to end users. This removes the need to even\ninstall DuckDB."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python"})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},1023:(e,t,s)=>{s.d(t,{A:()=>p});s(6540);var n,i=new Uint8Array(16);function a(){if(!n&&!(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(i)}const r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const o=function(e){return"string"==typeof e&&r.test(e)};for(var l=[],d=0;d<256;++d)l.push((d+256).toString(16).substr(1));const c=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=(l[e[t+0]]+l[e[t+1]]+l[e[t+2]]+l[e[t+3]]+"-"+l[e[t+4]]+l[e[t+5]]+"-"+l[e[t+6]]+l[e[t+7]]+"-"+l[e[t+8]]+l[e[t+9]]+"-"+l[e[t+10]]+l[e[t+11]]+l[e[t+12]]+l[e[t+13]]+l[e[t+14]]+l[e[t+15]]).toLowerCase();if(!o(s))throw TypeError("Stringified UUID is invalid");return s};const h=function(e,t,s){var n=(e=e||{}).random||(e.rng||a)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){s=s||0;for(var i=0;i<16;++i)t[s+i]=n[i];return t}return c(n)};var u=s(4848);const p=e=>(0,u.jsxs)("div",{style:{backgroundColor:"var(--ifm-background-surface-color)",marginBottom:"var(--ifm-leading)",borderRadius:"var(--ifm-global-radius)",boxShadow:"var(--ifm-global-shadow-lw)",overflow:"hidden",padding:"10px",font:"var(--ifm-code-font-size) / var(--ifm-pre-line-height) var(--ifm-font-family-monospace)"},children:[(0,u.jsx)("span",{style:{color:"var(--ifm-color-primary)"},children:"Out: "}),(0,u.jsx)("pre",{style:{margin:"0px",backgroundColor:"inherit"},children:e.children.split("\n").map((e=>(0,u.jsx)("p",{style:{marginBottom:"0px"},children:e},h())))})]})},8987:(e,t,s)=>{s.d(t,{A:()=>a});s(6540);var n=s(8774),i=s(4848);const a=e=>{let{githubUrl:t,colabUrl:s}=e;return(0,i.jsxs)("div",{className:"link-buttons",style:{textAlign:"right"},children:[(0,i.jsx)("br",{}),(0,i.jsx)(n.A,{to:s,children:(0,i.jsx)("img",{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open in Colab"})})," ",(0,i.jsx)(n.A,{to:t,children:(0,i.jsx)("img",{src:"https://badgen.net/static/GitHub/Open/blue?icon=github",alt:"Open in GitHub"})})]})}},290:(e,t,s)=>{s(6540);var n=s(3259),i=s.n(n),a=(s(2303),s(4848));i()({loader:()=>s.e(1236).then(s.bind(s,1236)),loading:e=>{let{timedOut:t}=e;return t?(0,a.jsx)("blockquote",{children:"Error: Loading Plotly timed out."}):(0,a.jsx)("div",{children:"loading..."})},timeout:1e4})},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var n=s(6540);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);