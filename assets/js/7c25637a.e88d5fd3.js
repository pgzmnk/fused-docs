"use strict";(self.webpackChunkfused_docs=self.webpackChunkfused_docs||[]).push([[4163],{1243:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=o(4848),r=o(8453),s=o(8987);o(1023),o(290);const a={title:"Explore Overture",sidebar_label:"Overture",path:"basics/tutorials/overture/overture",nb_path:"basics/tutorials/overture.ipynb",github:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/overture.ipynb",colab:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/overture.ipynb",description:"Tutorial on how to explore the Overture Buildings dataset with Fused."},i="Overture Buildings",l={id:"basics/tutorials/overture/Overture",title:"Explore Overture",description:"Tutorial on how to explore the Overture Buildings dataset with Fused.",source:"@site/docs/basics/tutorials/overture/Overture.mdx",sourceDirName:"basics/tutorials/overture",slug:"/basics/tutorials/overture/",permalink:"/fused-docs/basics/tutorials/overture/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Explore Overture",sidebar_label:"Overture",path:"basics/tutorials/overture/overture",nb_path:"basics/tutorials/overture.ipynb",github:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/overture.ipynb",colab:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/overture.ipynb",description:"Tutorial on how to explore the Overture Buildings dataset with Fused."},sidebar:"tutorialSidebar",previous:{title:"NYC Taxi OD",permalink:"/fused-docs/basics/tutorials/nyc-taxy-od"},next:{title:"Create Tiles async",permalink:"/fused-docs/basics/tutorials/seasfire/"}},d={},u=[{value:"ipyleaflet",id:"ipyleaflet",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.A,{githubUrl:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/overture.ipynb",colabUrl:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/overture.ipynb"}),"\n",(0,n.jsx)(t.h1,{id:"overture-buildings",children:"Overture Buildings"}),"\n",(0,n.jsx)(t.p,{children:"Welcome! This Notebook designed to perform a spatial query on the Overture Buildings\ndataset."}),"\n",(0,n.jsx)(t.p,{children:"The original dataset is several GB in size. The Fused User Defined Function (UDF) below\nfetches only the buildings that fall within the area of interest. This means you can use\nthis code to simplify your workflows by loading only the fraction of data you care\nabout."}),"\n",(0,n.jsx)("img",{src:"https://fused-magic.s3.us-west-2.amazonaws.com/docs_assets/overture_spatial_query.png",alt:"overture",width:"600"}),"\n",(0,n.jsx)(t.p,{children:"The Notebook shows how to:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Define an area of interest by drawing a polygon on a Leaflet map"}),"\n",(0,n.jsx)(t.li,{children:"Perform a spatial query over the dataset with a UDF"}),"\n",(0,n.jsx)(t.li,{children:"View the output on a map"}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["It shows examples for using both ",(0,n.jsx)(t.code,{children:"ipyleaflet"})," and ",(0,n.jsx)(t.code,{children:"geemap"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Let's begin!"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"# !pip install fused ipyleaflet geopandas -q\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"# If on colab, Enable the ipyleaflet widget (might require restarting the kernel)\n\n# !pip install ipywidgets==7.7.1 -q\n# from google.colab import output\n# output.enable_custom_widget_manager()\n"})}),"\n",(0,n.jsx)(t.h1,{id:"1-load-fused-udf",children:"1. Load Fused UDF"}),"\n",(0,n.jsx)(t.p,{children:"This User Defined Function (UDF) queries a geo partitioned version of the Overture\nBuildings Dataset (hosted on an S3 bucket) that corresponds to the area of an input\nGeoDataFrame. It returns a GeoDataFrame containing the subsampled data, which gets\ncached to the local environment for added speed."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"import fused\nimport geopandas as gpd\nfrom shapely.geometry import shape\n\n# Create a map centered at the given location\nMAP_LOCATION = (37.7749, -122.4194)\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'udf = fused.load(\n    "https://github.com/fusedio/udfs/tree/0905bef/public/Overture_Maps_Example"\n)\n'})}),"\n",(0,n.jsx)(t.h1,{id:"2-draw-polygon-to-query-buildings",children:"2. Draw polygon to query buildings"}),"\n",(0,n.jsx)(t.h2,{id:"ipyleaflet",children:"ipyleaflet"}),"\n",(0,n.jsx)(t.p,{children:"Draw a polygon around the AOI and on the map and wait for building polygons to load."}),"\n",(0,n.jsx)(t.p,{children:"Note: the workflow is designed to work with a single polygon."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'from ipyleaflet import DrawControl, GeoData, Map, basemap_to_tiles, basemaps\n\nm = Map(\n    layers=(basemap_to_tiles(basemaps.OpenStreetMap.Mapnik),),\n    center=MAP_LOCATION,\n    zoom=13,\n)\n\n\ndef on_draw(self, action, geo_json):\n    print("Running...")\n    gdf = gpd.GeoDataFrame(\n        index=[0], crs="epsg:4326", geometry=[shape(geo_json.get("geometry"))]\n    )\n    gdf_buildings = udf(bbox=gdf).run_local()\n    m.add(GeoData(geo_dataframe=gdf_buildings))\n    print("Done!")\n\n\ndraw_control = DrawControl()\ndraw_control.on_draw(on_draw)\ndraw_control.polygon = {\n    "shapeOptions": {"color": "red", "fillOpacity": 0.0},\n    "drawError": {"color": "#dd253b", "message": "Oups!"},\n    "allowIntersection": False,\n}\n\ndraw_control.rectangle = {"shapeOptions": {"color": "red", "fillOpacity": 0.0}}\n\nm.add(draw_control)\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python"})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1023:(e,t,o)=>{o.d(t,{A:()=>h});o(6540);var n,r=new Uint8Array(16);function s(){if(!n&&!(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(r)}const a=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const i=function(e){return"string"==typeof e&&a.test(e)};for(var l=[],d=0;d<256;++d)l.push((d+256).toString(16).substr(1));const u=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=(l[e[t+0]]+l[e[t+1]]+l[e[t+2]]+l[e[t+3]]+"-"+l[e[t+4]]+l[e[t+5]]+"-"+l[e[t+6]]+l[e[t+7]]+"-"+l[e[t+8]]+l[e[t+9]]+"-"+l[e[t+10]]+l[e[t+11]]+l[e[t+12]]+l[e[t+13]]+l[e[t+14]]+l[e[t+15]]).toLowerCase();if(!i(o))throw TypeError("Stringified UUID is invalid");return o};const c=function(e,t,o){var n=(e=e||{}).random||(e.rng||s)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){o=o||0;for(var r=0;r<16;++r)t[o+r]=n[r];return t}return u(n)};var p=o(4848);const h=e=>(0,p.jsxs)("div",{style:{backgroundColor:"var(--ifm-background-surface-color)",marginBottom:"var(--ifm-leading)",borderRadius:"var(--ifm-global-radius)",boxShadow:"var(--ifm-global-shadow-lw)",overflow:"hidden",padding:"10px",font:"var(--ifm-code-font-size) / var(--ifm-pre-line-height) var(--ifm-font-family-monospace)"},children:[(0,p.jsx)("span",{style:{color:"var(--ifm-color-primary)"},children:"Out: "}),(0,p.jsx)("pre",{style:{margin:"0px",backgroundColor:"inherit"},children:e.children.split("\n").map((e=>(0,p.jsx)("p",{style:{marginBottom:"0px"},children:e},c())))})]})},8987:(e,t,o)=>{o.d(t,{A:()=>s});o(6540);var n=o(8774),r=o(4848);const s=e=>{let{githubUrl:t,colabUrl:o}=e;return(0,r.jsxs)("div",{className:"link-buttons",style:{textAlign:"right"},children:[(0,r.jsx)("br",{}),(0,r.jsx)(n.A,{to:o,children:(0,r.jsx)("img",{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open in Colab"})})," ",(0,r.jsx)(n.A,{to:t,children:(0,r.jsx)("img",{src:"https://badgen.net/static/GitHub/Open/blue?icon=github",alt:"Open in GitHub"})})]})}},290:(e,t,o)=>{o(6540);var n=o(3259),r=o.n(n),s=(o(2303),o(4848));r()({loader:()=>o.e(1236).then(o.bind(o,1236)),loading:e=>{let{timedOut:t}=e;return t?(0,s.jsx)("blockquote",{children:"Error: Loading Plotly timed out."}):(0,s.jsx)("div",{children:"loading..."})},timeout:1e4})},8453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>i});var n=o(6540);const r={},s=n.createContext(r);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);