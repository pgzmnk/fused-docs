"use strict";(self.webpackChunkfused_docs=self.webpackChunkfused_docs||[]).push([[4950],{9514:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var n=a(4848),s=a(8453);const r={},i="Streamlit",l={id:"basics/out/streamlit",title:"Streamlit",description:"Streamlit is an open source Python app builder to turn data scripts into shareable web apps.",source:"@site/docs/basics/out/streamlit.md",sourceDirName:"basics/out",slug:"/basics/out/streamlit",permalink:"/fused-docs/basics/out/streamlit",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Retool",permalink:"/fused-docs/basics/out/retool"},next:{title:"Tutorials",permalink:"/fused-docs/basics/tutorials"}},o={},d=[{value:"Basic walkthrough",id:"basic-walkthrough",level:2},{value:"Step 1: Install streamlit",id:"step-1-install-streamlit",level:3},{value:"Step 2: Create a UDF",id:"step-2-create-a-udf",level:3},{value:"Step 3: Create your streamlit app",id:"step-3-create-your-streamlit-app",level:3},{value:"Step 4. Run your streamlit app",id:"step-4-run-your-streamlit-app",level:3},{value:"Intermediate examples",id:"intermediate-examples",level:2},{value:"Vector",id:"vector",level:3},{value:"Raster Tiles",id:"raster-tiles",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"streamlit",children:"Streamlit"}),"\n",(0,n.jsx)(t.p,{children:"Streamlit is an open source Python app builder to turn data scripts into shareable web apps."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"https://fused-magic.s3.us-west-2.amazonaws.com/docs_assets/gifs/streamlit_leaflet.gif",alt:"streamlit"})}),"\n",(0,n.jsx)(t.h2,{id:"basic-walkthrough",children:"Basic walkthrough"}),"\n",(0,n.jsx)(t.h3,{id:"step-1-install-streamlit",children:"Step 1: Install streamlit"}),"\n",(0,n.jsx)(t.p,{children:"Prepare an environment and install streamlit."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"pip install streamlit\n"})}),"\n",(0,n.jsx)(t.h3,{id:"step-2-create-a-udf",children:"Step 2: Create a UDF"}),"\n",(0,n.jsx)(t.p,{children:"Create a UDF."}),"\n",(0,n.jsx)(t.p,{children:"As an example, this minimalist UDF returns a dataframe with polygons for each administrative zone in Washington DC."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"@fused.udf\ndef my_udf(url='https://www2.census.gov/geo/tiger/TIGER_RD18/STATE/11_DISTRICT_OF_COLUMBIA/11/tl_rd22_11_bg.zip'):\n    import geopandas as gpd\n    return gpd.read_file(url)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"step-3-create-your-streamlit-app",children:"Step 3: Create your streamlit app"}),"\n",(0,n.jsxs)(t.p,{children:["Create a new Python script for your Streamlit app - in this case in a file called ",(0,n.jsx)(t.code,{children:"app.py"}),". This script will be the entry point of your application."]}),"\n",(0,n.jsx)(t.p,{children:"This script creates a minimalist Streamlit app that runs the UDF then displays its output dataframe."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"import fused\nimport streamlit as st\n\n\nst.title(\"\ud83c\udf0e Dataframe generator\")\n\n@fused.udf\ndef my_udf(url='https://www2.census.gov/geo/tiger/TIGER_RD18/STATE/11_DISTRICT_OF_COLUMBIA/11/tl_rd22_11_bg.zip'):\n    import geopandas as gpd\n    return gpd.read_file(url)\n\ndf = fused.run(udf=my_udf)\nst.dataframe(df)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"step-4-run-your-streamlit-app",children:"Step 4. Run your streamlit app"}),"\n",(0,n.jsx)(t.p,{children:"Start the app using Streamlit's CLI command."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"streamlit run app.py\n"})}),"\n",(0,n.jsx)(t.h2,{id:"intermediate-examples",children:"Intermediate examples"}),"\n",(0,n.jsx)(t.h3,{id:"vector",children:"Vector"}),"\n",(0,n.jsxs)(t.p,{children:["Copy and save the ",(0,n.jsx)(t.a,{href:"https://github.com/fusedio/udfs/tree/main/public/Get_Isochrone",children:"Isochrone UDF"})," on your Workbench. Create a Streamlit app with this code and paste your UDF's token below."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import folium\nimport fused\nimport streamlit as st\nimport streamlit.components.v1 as components\nfrom streamlit_folium import st_folium\n\n# Parameters\nst.markdown("# Isochrone calculator")\ncosting = st.selectbox(\n    "Select transportation mode",\n    ["auto", "pedestrian", "bicycle", "truck", "bus", "motor_scooter"],\n)\nlat = 39.949610\nlng = -75.150282\n\n# Run UDF\nTOKEN = "53bcd145dc75d8056045470f6c23861c8bd37fe7d0ee42eae716e755cebe2765"\ngdf = fused.run(TOKEN, costing=costing, lat=float(lat), lng=float(lng))\ngdf.set_crs(epsg=4326, inplace=True)\n\n# Generate map\nm = folium.Map([lat, lng], zoom_start=10, tiles="OpenStreetMap.Mapnik")\n\n# Generate point and vector layers\nfolium.GeoJson(gdf).add_to(m)\nfolium.Marker(location=[lat, lng], icon=folium.Icon(icon="cloud")).add_to(m)\n\n# Render map\nfolium_data = st_folium(m)\n'})}),"\n",(0,n.jsx)(t.h3,{id:"raster-tiles",children:"Raster Tiles"}),"\n",(0,n.jsxs)(t.p,{children:["Copy and save the ",(0,n.jsx)(t.a,{href:"https://github.com/fusedio/udfs/tree/main/public/CDLs_Tile_Example",children:"CDLs Tile UDF"})," on your Workbench. Create a Streamlit app with this code and paste your UDF's token below."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import folium\nimport streamlit as st\nfrom streamlit_folium import st_folium\n\n# Create map\nm = folium.Map(location=[37.43997405227058, -120.9375], zoom_start=11, tiles="Stadia.AlidadeSmoothDark")\n\n# Widgets\nst.markdown("# \ud83d\ude80 Streamlit + Folium + Fused \ud83d\ude80")\nst.markdown("""This UDF shows how to open Cropland Data Layer (CDL) tiff files. The CDL is a categorical land cover dataset that provides information about the types of crops and land cover on agricultural lands in the United States. The CDL is produced by the United States Department of Agriculture (USDA) National Agricultural Statistics Service (NASS) on an annual basis.""")\ncrop_type = st.selectbox("\ud83c\udf3d Select crop", ["corn", "soy", "wheat", "all", "almond", "grass"])\n\n# Structure URL\nTOKEN = "8110ef6e0c66f07f0c73f39843db27ece3960f98f268f38ef2f79f3623faae01"\nurl = f"https://www.fused.io/server/v1/realtime-shared/{TOKEN}/run/tiles/{{z}}/{{x}}/{{y}}?dtype_out_raster=png"\nif crop_type != "all": url += f"&crop_type={crop_type}"\n\n# Create raster tile layer\nfolium.TileLayer(\n    tiles=url,\n    attr="Fused",\n    name="fused",\n    max_zoom=19,\n    subdomains=["a", "b", "c"],\n).add_to(m)\n\n# Render map\nst_folium(m, width=300, height=500, use_container_width=True)\n'})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>l});var n=a(6540);const s={},r=n.createContext(s);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);