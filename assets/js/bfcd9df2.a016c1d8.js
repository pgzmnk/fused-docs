"use strict";(self.webpackChunkfused_docs=self.webpackChunkfused_docs||[]).push([[4709],{9709:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>p});var i=t(4848),s=t(8453),o=t(3650);const a='import fused_app\nimport pydeck as pdk\nimport streamlit as st\n\nst.header("Point in Polygon: Overture + NSI")\n\nst.write("""\nPoint-in-polygon analysis using Overture building polygons and NSI point data is a powerful technique for geospatial risk assessment and urban planning. By combining the detailed building footprints from Overture Maps with the comprehensive hazard and value information from the National Structure Inventory, we can create rich, informative risk maps and indices.\n""")\nlng, lat =  -73.9874, 40.7431\n\n\n\n# Create map\n\nview_tile = st.sidebar.checkbox("View data for tiled map?")\nst.sidebar.divider()\n\nif view_tile:\n    tile_url = "{z}/{x}/{y}"\nelse:\n    x,y,z = 9649, 12316,15\n    tile_url = f"{z}/{x}/{y}"\n\ntarget_metric = st.sidebar.selectbox(\n    "Select metric:",\n    [\'med_yr_blt\', \'val_struct\', \'val_cont\', \'val_vehic\'],\n)\n\nst.write("You selected:", target_metric)\n\nurl_nsi = f\'https://www.fused.io/server/v1/realtime-shared/c8679490a7c130178e2781a45f4090208c9bcd8d8d7572532c4c39c4d0914467/run/tiles/{tile_url}?dtype_out_vector=geojson&return_object=gdf_nsi&target_metric={target_metric}\'\nurl_overture = f\'https://www.fused.io/server/v1/realtime-shared/c8679490a7c130178e2781a45f4090208c9bcd8d8d7572532c4c39c4d0914467/run/tiles/{tile_url}?dtype_out_vector=geojson&return_object=gdf_overture&target_metric={target_metric}\'\nurl_out = f\'https://www.fused.io/server/v1/realtime-shared/c8679490a7c130178e2781a45f4090208c9bcd8d8d7572532c4c39c4d0914467/run/tiles/{tile_url}?dtype_out_vector=geojson&return_object=end_result&target_metric={target_metric}\'\n\n\n\n\n\nlayers=[]\n\nif st.sidebar.checkbox("Show end result"):\n    layers.append(pdk.Layer(\n        "TileLayer",\n        data=url_out,\n        get_line_color=[255, 255, 2, 1000],\n        stroked=True,\n        get_line_width=10,\n        pickable=True,\n        extruded=True,\n        get_elevation=\'properties.stats / 20\',\n        get_fill_color="[properties.stats/100000, properties.stats/100000, properties.stats]",\n    ))\nif st.sidebar.checkbox("Show building"):\n    layers.append(pdk.Layer(\n        "TileLayer",\n        data=url_overture,\n        get_line_color=[255, 25, 2, 100],\n        stroked=True,\n        get_line_width=2,\n        pickable=True,\n\n        filled=False,\n    ))\nif st.sidebar.checkbox("Show NSI"):\n    layers.append(pdk.Layer(\n        "TileLayer",\n        data=url_nsi,\n        get_line_color=[255, 255, 2, 1000],\n        stroked=True,\n        get_line_width=4,\n        pickable=True,\n        extruded=True,\n        # get_elevation=\'properties.val_struct / 200000\',\n        # get_fill_color="[properties.val_struct/100000, properties.val_struct/100000, properties.val_struct]",\n    ))\n\n\n\n\nst.pydeck_chart(\n    pdk.Deck(\n        map_style="mapbox://styles/mapbox/dark-v9",\n        initial_view_state=pdk.ViewState(\n            latitude=lat,\n            longitude=lng,\n            zoom=14,\n            pitch=25,\n        ),\n        tooltip = {\n             "html": "<b>Structure Value:</b> ${val_struct}",\n                   "style": {\n                        "backgroundColor": "steelblue",\n                        "color": "white"\n                   }\n        },\n        layers=layers\n    )\n)\n\n# st_damcat\n# med_yr_blt\n# geometry\n# val_vehic\n# occtype\n# val_struct\n# stats \n\n',r={id:"point-in-polygon",title:"Point in polygon",tags:["point","polygon"],sidebar_position:2},l="Point in Polygon: A Guide With Overture & NSI",d={id:"basics/usecases/point-in-polygon",title:"Point in polygon",description:"Point in polygon operations ask whether a given set of points in a map fall within a polygon. This is used to enrich data from one dataset with information from another dataset.",source:"@site/docs/basics/usecases/point-polygon.mdx",sourceDirName:"basics/usecases",slug:"/basics/usecases/point-in-polygon",permalink:"/basics/usecases/point-in-polygon",draft:!1,unlisted:!1,tags:[{label:"point",permalink:"/tags/point"},{label:"polygon",permalink:"/tags/polygon"}],version:"current",sidebarPosition:2,frontMatter:{id:"point-in-polygon",title:"Point in polygon",tags:["point","polygon"],sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Buffer Analysis",permalink:"/basics/usecases/buffer"},next:{title:"Raster to H3",permalink:"/basics/usecases/raster-h3"}},c={},p=[{value:"Applications",id:"applications",level:2},{value:"Implementing point in polygon analysis",id:"implementing-point-in-polygon-analysis",level:2},{value:"Implementation steps",id:"implementation-steps",level:3},{value:"Example UDF",id:"example-udf",level:3},{value:"Scaling up with Fused",id:"scaling-up-with-fused",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"\u2b50 Demo app",id:"-demo-app",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"point-in-polygon-a-guide-with-overture--nsi",children:"Point in Polygon: A Guide With Overture & NSI"}),"\n",(0,i.jsx)(n.p,{children:"Point in polygon operations ask whether a given set of points in a map fall within a polygon. This is used to enrich data from one dataset with information from another dataset."}),"\n",(0,i.jsxs)(n.p,{children:["This walkthrough demonstrates how to enrich Overture Maps building polygons with hazard metadata from the National Structure Inventory (NSI) using point in polygon analysis. The result is a risk map that combines building footprints with hazard information. The Overture Maps buildings dataset contains ",(0,i.jsx)(n.code,{children:"Polygon"})," objects of building footprints and the NSI dataset contains ",(0,i.jsx)(n.code,{children:"Point"})," objects of catalogued businesses and structures with metadata that supports the evaluation of consequences from natural and man-made hazards. Together, these datasets can be used to identify buildings at risk from hazards."]}),"\n",(0,i.jsx)(n.p,{children:"Such type of analysis can provide a comprehensive view of disaster risk, combining physical vulnerability (building type, damage category), economic exposure (structure and content values), and social vulnerability (population at risk). It can enable decision-makers to make informed choices about resource allocation for disaster preparedness, response, and recovery."}),"\n",(0,i.jsx)("iframe",{src:"/img/deckgl_vector_zstats_v2.html",height:"400px",width:"100%",scrolling:"no"}),"\n",(0,i.jsx)(n.h2,{id:"applications",children:"Applications"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Disaster risk assessment and planning (e.g. flood or fire)"}),"\n",(0,i.jsx)(n.li,{children:"Insurance risk modeling"}),"\n",(0,i.jsx)(n.li,{children:"Infrastructure replacement planning"}),"\n",(0,i.jsx)(n.li,{children:"Urban planning and zoning"}),"\n",(0,i.jsx)(n.li,{children:"Emergency response and evacuation planning"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"implementing-point-in-polygon-analysis",children:"Implementing point in polygon analysis"}),"\n",(0,i.jsx)(n.h3,{id:"implementation-steps",children:"Implementation steps"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Load data for each dataset as a ",(0,i.jsx)(n.code,{children:"GeoDataFrame"})," for a spatially filtered subregion."]}),"\n",(0,i.jsxs)(n.li,{children:["Use the ",(0,i.jsx)(n.code,{children:"GeoPandas"})," method ",(0,i.jsx)(n.code,{children:"sjoin"})," to determine which points lie within each polygon."]}),"\n",(0,i.jsx)(n.li,{children:"Structure the output table."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-udf",children:"Example UDF"}),"\n",(0,i.jsx)(n.p,{children:"This UDF loads the Overture and NSI datasets (with pre-defined subsets of columns), performs a spatial join to enrich the building polygons with hazard metadata, and returns the enriched GeoDataFrame. It can be used within a larger analysis workflow to enrich building polygons to calculate risk indices."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"@fused.udf\ndef udf(bbox: fused.types.TileGDF=None):\n    from utils import load_overture_gdf, load_nsi_gdf\n\n    # Load both datasets\n    gdf_overture = load_overture_gdf(bbox, overture_type = \"building\")\n    gdf_nsi = load_nsi_gdf(bbox)\n\n    # Spatial join - keeps the polygon geometry\n    gdf_enriched_buildings = gdf_overture.sjoin(gdf_nsi)\n\n    # Drop cases where two points fall within one polygon\n    gdf_enriched_buildings.drop_duplicates(subset='id', keep='first', inplace=True, ignore_index=True)\n\n    return gdf_enriched_buildings\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The UDF would return a ",(0,i.jsx)(n.code,{children:"GeoDataFrame"})," with the Overture building geometry and the selected NSI columns:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 column0 \u2502          id          \u2502                                        geometry                                         \u2502                          names                          \u2502 st_damcat \u2502 occtype \u2502 med_yr_blt \u2502 val_struct \u2502  val_cont  \u2502 val_vehic \u2502\n\u2502  int64  \u2502       varchar        \u2502                                         varchar                                         \u2502                         varchar                         \u2502  varchar  \u2502 varchar \u2502   int64    \u2502   double   \u2502   double   \u2502  double   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502       0 \u2502 08b489e34622dfff02\u2026  \u2502 POLYGON ((-97.7532121 30.2694096, -97.7532879 30.2692591, -97.7533541 30.2691264, -97\u2026  \u2502 {'primary': 'The Bowie', 'common': None, 'rules': None} \u2502 COM       \u2502 COM4    \u2502       2003 \u2502 963089.123 \u2502 963089.123 \u2502   27000.0 \u2502\n\u2502       1 \u2502 08b489e346229fff02\u2026  \u2502 POLYGON ((-97.7530941 30.2695412, -97.7530164 30.2695137, -97.7529916 30.269566, -97.\u2026  \u2502                                                         \u2502 COM       \u2502 COM8    \u2502       2003 \u2502  228292.24 \u2502  228292.24 \u2502   45000.0 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n"})}),"\n",(0,i.jsx)(n.h3,{id:"scaling-up-with-fused",children:"Scaling up with Fused"}),"\n",(0,i.jsx)(n.p,{children:"For large scale analysis across nation datasets, you can run the above UDF that spatially filters each table then runs the code over the sub-areas. This makes for computationally efficiency analyses that can run in parallel."}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"Point-in-polygon analysis using Overture building polygons and NSI point data is a powerful technique for geospatial risk assessment and urban planning. By combining the detailed building footprints from Overture Maps with the comprehensive hazard and value information from the National Structure Inventory, we can create rich, informative risk maps and indices."}),"\n",(0,i.jsx)(n.p,{children:"However, it's important to consider the limitations and potential complexities of the data such as: quality and completeness, temporal alignment between datasets, scale and resolution differences, and adequately handling cases where multiple points fall within a single polygon."}),"\n",(0,i.jsx)(n.h2,{id:"-demo-app",children:"\u2b50 Demo app"}),"\n","\n","\n",(0,i.jsx)(o.A,{id:"point-in-polygon",url:"https://staging.fused.io/workbench#app/s/aH4sIAAAAAAAAA9VXbW%2FbNhD%2BK4Qy1A2mWLJjx7FRt8A6FCiwdQVSFBjiwKDIs8WGIlWSsqMY%2Fu87SvJr0ibDug%2BVkJg88p57J0%2BrgGkOwSgQWa6NI7PCAp%2FSPJ%2BohpKXHNgtoZbk%2FHZLtc4AzaRwfsG6iZoo69opUA7m5ST4qIVyRCjyUctyrtWI%2FLUA4woD5Ffy4er9JDhtWJZGOECO6lUV35lQZ3nNR6iisrTCksIKNd%2BhJIWQ3FOajRZ3co%2BMBC%2BaU0cJslGcL8HMCkkcsFSJrwWQmTZkDtrm1AkqiRHW22fB2gyQ1yMVJqGK5JIqhVLa5LeSMJ0lws%2BIS4FwcFRI4DtNZlq73KBwS2ZGZztd%2F6S5JUvh0ooRYXIDKSgrFkBSek8Nr0QuqETdhELtMlQMja9gPM%2BHao6qXjlTsAr0vVqgrtqUIVkiKCrLMCIO0BqWhjuYBdT2ZV4JL0YoLhjYNvq%2FcjoGQqp5SCR1ZEzI2eC8Pbwc9ELSi9uD3nnHx8m%2FJ%2BRtLQCR%2FHwhYDl16ALkwjhawSGhps1SzJZE32FIP%2BOOOhDe4a7yFjK%2FqWTusXCxED5tqpQQM7JFHk0UwccPp4WRKGgSrO7X0eoO%2F8q1TxiQdrPtLizDe9wzvOgNQ9Lpnncuwk7%2FAcTsAcZEOWrm4KYZOPTeoT0WJDBXGVQhTYKrikLqzaNJENYL160MK6c000S6VkhaGM6prcK1mTGttuMFpIK1bpD3uBD%2B1gWphQL36ORAuWo3GjLF9PHGtFLncjuKouVy2a6Kty10ZMFg8kWLToQhk05kcGZTaoBH7PJiMOwNYzpgnfO4M7iE7uCyQ3v9WS8ext34kg0Txi%2FxHfQH3f55l%2FXY%2BZD1eDzs9HoXg8gUKvLetNFq49T1G%2B7KHKa6cGgXw6QcY3V9sVq9MIDJqqY6%2BYL08ZzPvN4vDiwarw6m61Ztn95Uz89o5Eb551lauJ%2FOSFB8asAW0j1p4u6VtARjx9c3TZ0%2FfmpcpXpJEJ%2FU%2BHhYNPVds7fxbsLVl3gZtf%2FwlKYu69r8hIZU1G1Z%2BsefQePG1Xtkr6cUCrAwJVp63e33Q1L%2Fw%2FMjjuObvc1YyvoW%2BPiTKeAxjKXgLh134r21XLBbmkg45oE7PBb441hY%2BIvqsB%2B3cqNzTCOBZ7V1FG%2BViHTj1tH%2BmZCy0X8SXB%2BzRN6KOA7Jsxduto47PX0qSJub78eGqCmdp%2BO0CdO%2Fj1L3O0HarXjXItQ7ilfMs31S9zY%2Fzh14XP6%2FGdv7Dwl78p2U3V1%2FVd76p%2FWA9ZvZu%2BN%2BLFOfu3qYzJsXo1f3tFOGJ6lrouGj8zsS94KDvQoCleiPSYBjjDKezhXBRvU84tTcni2GB7HDHtG3ldOqjfFFBWMP7ruhKz%2Fbk1AniRMOvTvGQXi0pNW8WcMO7XDtXuts3OkdUXPhGOZ3f498ujd2WuMdkuN1szrkw0RMXSYnwQhHr5LXuz7zs%2B9KR6%2Bi5DX5ZbVz7frA5AOgykMe6VjGwa6Estu50YXib338a8nWAcgEBX4LvWFmO5Zlim2T7%2BIe2bjeUdd7eM09VP80%2BdH0YSdYNVNOM0adn%2Bw6Oj%2FDq9Bfa6Ufb3s4P9GM%2BWtzQ689VIP5c9sDB2Fg4GshDPhPDBuMrgOEy7Ehp7ZZA%2Bv88I4aQ0sclNRI%2FKlzFQcio3MQGkfY1%2BdSOykSnGy%2FxM4og%2BAG99l3hZRX%2BDkAKhjN%2FPG1%2Fgfb7B2H5w0AAA%3D%3D",code:a,requirements:["/pyarrow/pyarrow-17.0.0-cp312-cp312-pyodide_2024_0_wasm32.whl","pyodide-unix-timezones","geopandas","requests","xarray","yarl","pydeck"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},3650:(e,n,t)=>{t.d(n,{A:()=>o});var i=t(6540),s=t(4848);function o(e){let{id:n,url:t,code:o,requirements:a}=e;const r=(0,i.useRef)(null);function l(e,n){n.style.left=`${e.left+window.scrollX}px`,n.style.top=`${e.top+window.scrollY}px`,n.style.width=`${e.width}px`,n.style.height=`${e.height}px`}return(0,i.useEffect)((()=>{let e=null;document.getElementById("magic-iframe")?e=document.getElementById("magic-iframe"):(e=document.createElement("iframe"),e.src=t,e.height="1050px",e.width="100%",e.scrolling="no",e.id="magic-iframe",document.body.appendChild(e)),e.contentWindow.postMessage({appRunner:{code:o,enabled:!0,requirements:a}},t);const n=r.current.getBoundingClientRect();e.style.position="absolute",e.style.display="block",l(n,e);const i=new IntersectionObserver((e=>{for(const n of e)if(n.isIntersecting){const e=document.getElementById("magic-iframe");if(e){l(n.boundingClientRect,e)}}}));i.observe(r.current);const s=new ResizeObserver((e=>{for(const n of e)if(n.contentBoxSize){const e=document.getElementById("magic-iframe");if(e){l(r.current.getBoundingClientRect(),e)}}}));return s.observe(r.current),()=>{const e=document.getElementById("magic-iframe");e&&(e.style.left="-10000px",e.style.top="-10000px",e.style.width="0px",e.style.height="0px",e.style.display="none"),s.disconnect(),i.disconnect()}}),[]),(0,s.jsx)("div",{ref:r,style:{width:"100%",height:"1050px"}})}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);