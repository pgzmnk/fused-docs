"use strict";(self.webpackChunkfused_docs=self.webpackChunkfused_docs||[]).push([[9528],{3195:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>a});var r=s(4848),t=s(8453);const l={sidebar_label:"_download",title:"fused.core._download"},o=void 0,d={id:"reference/fused/core/_download",title:"fused.core._download",description:"filesystem",source:"@site/docs/reference/fused/core/_download.md",sourceDirName:"reference/fused/core",slug:"/reference/fused/core/_download",permalink:"/reference/fused/core/_download",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"_download",title:"fused.core._download"},sidebar:"tutorialSidebar",previous:{title:"_cache",permalink:"/reference/fused/core/_cache"},next:{title:"_realtime_ops",permalink:"/reference/fused/core/_realtime_ops"}},i={},a=[{value:"filesystem",id:"filesystem",level:2},{value:"create_path",id:"create_path",level:2},{value:"download",id:"download",level:2},{value:"download_folder",id:"download_folder",level:2},{value:"_run_once",id:"_run_once",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"filesystem",children:"filesystem"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def filesystem(protocol: str, **storage_options) -> fsspec.AbstractFileSystem\n"})}),"\n",(0,r.jsx)(n.p,{children:"Get an fsspec filesystem for the given protocol."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"protocol"}),' - Protocol part of the URL, such as "s3" or "gs".']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"storage_options"})," - Additional arguments to pass to the storage backend."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsx)(n.p,{children:"An fsspec AbstractFileSystem."}),"\n",(0,r.jsx)(n.h2,{id:"create_path",children:"create_path"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def create_path(file_path: str, mkdir: bool = True) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Creates a directory in a predefined temporary directory."}),"\n",(0,r.jsx)(n.p,{children:"This gives users the ability to manage directories during the execution of a UDF. It takes a relative file_path, creates the corresponding directory structure, and returns its absolute path."}),"\n",(0,r.jsx)(n.p,{children:"This is useful for UDFs that temporarily store indermediate results as files, such as when writing intermediary files do disk when processing large datasets. create_path ensures that necessary directories exist."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"file_path"})," - The file path to locate."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mkdir"})," - If True, create the directory if it doesn't already exist. Defaults to True."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsx)(n.p,{children:"The located file path."}),"\n",(0,r.jsx)(n.h2,{id:"download",children:"download"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def download(url: str, file_path: str) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Download a file."}),"\n",(0,r.jsx)(n.p,{children:"May be called from multiple processes with the same inputs to get the same result."}),"\n",(0,r.jsx)(n.p,{children:"Fused runs UDFs from top to bottom each time code changes. This means objects in the UDF are recreated each time, which can slow down a UDF that downloads files from a remote server."}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udca1 Downloaded files are written to a mounted volume shared across all UDFs in an organization. This means that a file downloaded by one UDF can be read by other UDFs."}),"\n",(0,r.jsx)(n.p,{children:"Fused addresses the latency of downloading files with the download utility function. It stores files in the mounted filesystem so they only download the first time."}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udca1 Because a Tile UDF runs multiple chunks in parallel, the download function sets a signal lock during the first download attempt, to ensure the download happens only once."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"url"})," - The URL to download."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"file_path"})," - The local path where to save the file."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsx)(n.p,{children:"The function downloads the file only on the first execution, and returns the file path."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'@fused.udf\ndef geodataframe_from_geojson():\n    import geopandas as gpd\n    url = "s3://sample_bucket/my_geojson.zip"\n    path = fused.core.download(url, "tmp/my_geojson.zip")\n    gdf = gpd.read_file(path)\n    return gdf\n'})}),"\n",(0,r.jsx)(n.h2,{id:"download_folder",children:"download_folder"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def download_folder(url: str, file_path: str) -> str\n"})}),"\n",(0,r.jsx)(n.p,{children:"Download a folder."}),"\n",(0,r.jsx)(n.p,{children:"May be called from multiple processes with the same inputs to get the same result."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"url"})," - The URL to download."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"file_path"})," - The local path where to save the files."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsx)(n.p,{children:"The string of the local path."}),"\n",(0,r.jsx)(n.h2,{id:"_run_once",children:"_run_once"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def _run_once(signal_name: str, fn: Callable) -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Run a function once, waiting for another process to run it if in progress."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"signal_key"})," - A relative key for signalling done status. Files are written using ",(0,r.jsx)(n.code,{children:"create_path"})," and this key to deduplicate runs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fn"})," - A function that will be run once."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>d});var r=s(6540);const t={},l=r.createContext(t);function o(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);