"use strict";(self.webpackChunkfused_docs=self.webpackChunkfused_docs||[]).push([[2813],{1728:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>p,frontMatter:()=>n,metadata:()=>c,toc:()=>l});var s=o(4848),a=o(8453);const n={},r="Retool",c={id:"basics/out/retool",title:"Retool",description:"Supercharge your team's Retool apps with serverless geospatial operations! \u26a1",source:"@site/docs/basics/out/retool.md",sourceDirName:"basics/out",slug:"/basics/out/retool",permalink:"/fused-docs/basics/out/retool",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"QGIS",permalink:"/fused-docs/basics/out/qgis"},next:{title:"Streamlit",permalink:"/fused-docs/basics/out/streamlit"}},i={},l=[{value:"1. Create an HTML map",id:"1-create-an-html-map",level:2},{value:"2. Create a custom Retool component",id:"2-create-a-custom-retool-component",level:2},{value:"3. Pass data from a UI component to the map (optional)",id:"3-pass-data-from-a-ui-component-to-the-map-optional",level:2},{value:"4. Pass data from the map to a UI component (optional)",id:"4-pass-data-from-the-map-to-a-ui-component-optional",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"retool",children:"Retool"}),"\n",(0,s.jsx)(t.p,{children:"Supercharge your team's Retool apps with serverless geospatial operations! \u26a1"}),"\n",(0,s.jsxs)(t.p,{children:["This guide shows how to create a ",(0,s.jsx)(t.a,{href:"https://docs.retool.com/apps/web/guides/components/custom",children:"custom Retool component"})," using the ",(0,s.jsx)(t.a,{href:"https://docs.mapbox.com/mapbox-gl-js/example/",children:"Mapbox GL JS"})," library to display vector tiles from a custom tile server provided by Fused."]}),"\n",(0,s.jsx)(t.p,{children:"You'll first generate a signed UDF URL then introduce it into a custom map component that can input and output data across other Retool components."}),"\n",(0,s.jsx)(t.h2,{id:"1-create-an-html-map",children:"1. Create an HTML map"}),"\n",(0,s.jsxs)(t.p,{children:["Create a mapbox ",(0,s.jsx)(t.code,{children:".html"})," map following this ",(0,s.jsx)(t.a,{href:"/basics/out/mapbox/",children:"tutorial"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"2-create-a-custom-retool-component",children:"2. Create a custom Retool component"}),"\n",(0,s.jsxs)(t.p,{children:["In a Retool app, create a custom Retool component. In the ",(0,s.jsx)(t.code,{children:"IFrame Code"})," box, paste the code Mapbox HTML map created in the first step."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://fused-magic.s3.us-west-2.amazonaws.com/docs_assets/retool-1.png",alt:"alt text"})}),"\n",(0,s.jsx)(t.p,{children:"It's that easy. The following two sections show how to interchange data with the map component you just created. That's a bit more elaborate, but you're in good hands."}),"\n",(0,s.jsx)(t.h2,{id:"3-pass-data-from-a-ui-component-to-the-map-optional",children:"3. Pass data from a UI component to the map (optional)"}),"\n",(0,s.jsx)(t.p,{children:"Create a component that accepts user input which will be passed as a query parameter to the Fused endpoint."}),"\n",(0,s.jsxs)(t.p,{children:["This example uses a ",(0,s.jsx)(t.code,{children:"select"})," component. Add options to the component - in this case ",(0,s.jsx)(t.code,{children:"building"}),", ",(0,s.jsx)(t.code,{children:"water"}),", and ",(0,s.jsx)(t.code,{children:"place"})," because in the sample UDF these are passed in the ",(0,s.jsx)(t.code,{children:"type"}),' parameter to select different "theme" layers of the Overture dataset.']}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://fused-magic.s3.us-west-2.amazonaws.com/docs_assets/retool-2.png",alt:"alt text"})}),"\n",(0,s.jsxs)(t.p,{children:["In Retool custom components, variables are passed through the Model. The IFrame code receives updates from Retool via a subcribe function. The Retool docs further explain how to ",(0,s.jsx)(t.a,{href:"https://docs.retool.com/apps/web/guides/components/custom#pass-data-to-your-custom-component",children:"pass data to your custom component"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["In the custom component's ",(0,s.jsx)(t.code,{children:"Model"})," box, paste a snippet like this one to pass data from the ",(0,s.jsx)(t.code,{children:"select"})," component."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{  \n  "theme": {{select1.value}}\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Now subscribe the sections of code that will make use of the model values by wrapping all map components within a ",(0,s.jsx)(t.code,{children:"window.Retool.subscribe"})," function. In this example, the value of ",(0,s.jsx)(t.code,{children:"model.theme"})," is passed to a query parameter via string interpolation. When the value changes in the UI element, the value will update for the map."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"window.Retool.subscribe(function (model) {\n\n    const map = new mapboxgl.Map({\n        ...\n    });\n\n    map.on('load', () => {\n        map.addSource('fused-vector-source', {\n            'type': 'vector',\n            'tiles': [ // Vector Tile URL that returns mvt (https://docs.mapbox.com/data/tilesets/guides/vector-tiles-standards/)\n                `https://www.fused.io/server/v1/realtime-shared/55ffe996fc2bd635cde3beda7e2632005e228798a1ef333297240b86af7d12a4/run/tiles/{z}/{x}/{y}?dtype_out_vector=mvt&type=${model.theme}`\n            ],\n            'minzoom': 6,\n            'maxzoom': 14\n        });\n      \n        map.addLayer(\n            ...\n        );\n    })\n})\n"})}),"\n",(0,s.jsx)(t.p,{children:"The result should look like this."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://fused-magic.s3.us-west-2.amazonaws.com/docs_assets/gifs/retool_in.gif",alt:"alt text"})}),"\n",(0,s.jsx)(t.h2,{id:"4-pass-data-from-the-map-to-a-ui-component-optional",children:"4. Pass data from the map to a UI component (optional)"}),"\n",(0,s.jsxs)(t.p,{children:["Passing data from the map component to another Retool component follows a similar process. This example introduces a drawing tool to draw custom polygons on the preceding map, then pass the polygons' geojson to a ",(0,s.jsx)(t.code,{children:"jsonExplorer"})," Retool component."]}),"\n",(0,s.jsxs)(t.p,{children:["First, update the custom component's model to include a ",(0,s.jsx)(t.code,{children:"data"})," key with an empty dictionary as a value. This is where the map component will pass data."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{  \n  "theme": {{select1.value}},\n  "data": {} \n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Then, introduce these headers and snippet to the map IFrame."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:'<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.2.1/mapbox-gl-draw.js"><\/script>\n<link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.2.1/mapbox-gl-draw.css" type="text/css">\n'})}),"\n",(0,s.jsxs)(t.p,{children:["This is a ",(0,s.jsx)(t.a,{href:"https://github.com/mapbox/mapbox-gl-draw",children:"MapboxDraw"})," component. Ensure it's wrapped within the same ",(0,s.jsx)(t.code,{children:"window.Retool.subscribe"})," function introduced in step 3 so Retool updates the ",(0,s.jsx)(t.code,{children:"data"})," field when a change in the draw component triggers the ",(0,s.jsx)(t.code,{children:"updateData"})," function."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"var draw = new MapboxDraw({\n    displayControlsDefault: false,\n    controls: {\n        polygon: true,\n        trash: true\n    }\n});\nmap.addControl(draw);\n\nmap.on('draw.create', updateData);\nmap.on('draw.delete', updateData);\nmap.on('draw.update', updateData);\n\nfunction updateData(e) {\n    var data = draw.getAll();\n    window.Retool.modelUpdate({ data })\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Finally, create a ",(0,s.jsx)(t.code,{children:"jsonExplorer"})," component with the following value ",(0,s.jsx)(t.code,{children:"{{customComponent1.model.data}}"})," which will receive the GeoJSON when a polygon is drawn on the map."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://fused-magic.s3.us-west-2.amazonaws.com/docs_assets/gifs/retool_out.gif",alt:"alt text"})}),"\n",(0,s.jsxs)(t.p,{children:["This GeoJSON can be used in subsequent operations. For example, it could be passed as a parameter to downstream UDF calls as explained ",(0,s.jsx)(t.a,{href:"/basics/out/http/#with-a-geojson",children:"here"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>r,x:()=>c});var s=o(6540);const a={},n=s.createContext(a);function r(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);