"use strict";(self.webpackChunkfused_docs=self.webpackChunkfused_docs||[]).push([[3437],{8020:(n,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>p});var e=o(4848),i=o(8453),a=o(3650);const r={},s="Point with polygon",d={id:"basics/transform/join/point-with-polygon",title:"Point with polygon",description:"",source:"@site/docs/basics/transform/join/point-with-polygon.mdx",sourceDirName:"basics/transform/join",slug:"/basics/transform/join/point-with-polygon",permalink:"/fused-docs/basics/transform/join/point-with-polygon",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udee0\ufe0f Point with line",permalink:"/fused-docs/basics/transform/join/point-with-line"},next:{title:"\ud83d\udee0\ufe0f Polygon with polygon",permalink:"/fused-docs/basics/transform/join/polygon-with-polygon"}},c={},p=[];function l(n){const t={code:"code",h1:"h1",pre:"pre",...(0,i.R)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:"point-with-polygon",children:"Point with polygon"}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:"language-python",children:"@fused.udf\ndef udf(year: str = '2010', month: str = '01', n_rows: int = 10000, object_to_show='points'):\n    import geopandas as gpd\n    import h3\n    import pandas as pd\n\n    from utils import generate_color_from_identifier, lonlat_to_geom\n    \n    @fused.cache\n    def load_taxi_data(year, month, n_rows=n_rows):\n        return pd.read_parquet(f'https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_{year}-{month}.parquet').head(n_rows)\n\n    @fused.cache\n    def load_census_blocks(counties=[\"061\"]):\n        url=\"https://www2.census.gov/geo/tiger/TIGER_RD18/STATE/36_NEW_YORK/36/tl_rd22_36_bg.zip\"\n        gdf = gpd.read_file(url)\n        gdf = gdf[gdf[\"COUNTYFP\"].isin(counties)]\n        return gdf\n\n    # Load data\n    gdf_census_blocks = load_census_blocks()\n    taxi_data = load_taxi_data(year='2010', month='01')\n    taxi_data['geometry'] = lonlat_to_geom(taxi_data, cols_lonlat=['pickup_longitude','pickup_latitude'])\n    taxi_data = gpd.GeoDataFrame(taxi_data)\n\n    # Spatial join between points and polygons\n    joined = gpd.sjoin(taxi_data, gdf_census_blocks, how=\"left\", op=\"within\")\n    joined[['r', 'g', 'b']] = pd.DataFrame(joined['GEOID'].apply(generate_color_from_identifier).tolist(), index=joined.index)\n    return joined\n"})}),"\n","\n","\n",(0,e.jsx)(a.A,{url:"https://staging.fused.io/workbench#app/s/aH4sIAAAAAAAAA61U247aMBD9Fct9AKQsJOESQMpTq1aq%2BrDSVn0hKHLiSXAxdmqbZWm1%2F94xsCwbthepndxmzsyczIyd%2FKCl5kDnVGwabRxp9hzKNWGWNHydqRNqnQG2kcJ5h3VnvNpa4DlrmjNSg26Y4hiGZ93wTPnDur4TTkI3o7daKEeEIrda7mutMto7xmTK6TUokpJOkfBoVvJZEg%2BrOOKTURHFPK6mJY%2FYpAqHrOBJEUI8ScoiiYCzeJpwNmFxNC1ZBEUnU7xConN5fbNV3QN9QHTxFUqXO53bld6lneZYh%2B0EROVG72w6DlF6niNvfLX276l89DWRVHVAJHPI071Jhv3ZNElm44CMwn4yHo1no8MI3pC3OGUHZMOaw8iOa5GXK2ZcN1MEBRel%2Fw7Bk%2BkFo3Pr9hLSjKJe6If5YHAA7OBoDzgz65v7WUaD5zShhBNM5vcCdpiP7009%2BRc077x18QYvWL1wWw4pKkHLpVV98mGfL33ftd6kUdhCG%2BHKVXqJ9i50yfZgbLpo5WBxn7ynVZiXjH4A%2FdFqdQh40eaTcOZYyqtXPDW4vBJS5qWW2qSLeIwrE%2BM1DAMShctfpEihoJXibz4lfDUJvyHcNTz9bLbwO86d4G51PbNee4b%2FZR6nDf7nHjsLE9RBsez8c2fjq86ezae5IdSjATXwbSsMbABLpPMFPf9cTj6wzqsPzBi2R2XPjMTH8buhy4AK%2B34r5V1pABSdV0xaePwJURrND%2FIEAAA%3D"})]})}function u(n={}){const{wrapper:t}={...(0,i.R)(),...n.components};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(l,{...n})}):l(n)}},3650:(n,t,o)=>{o.d(t,{A:()=>i});o(6540);var e=o(4848);function i(n){let{children:t,url:o}=n;return(0,e.jsx)("iframe",{src:o,height:"1050px",width:"100%",scrolling:"no"})}},8453:(n,t,o)=>{o.d(t,{R:()=>r,x:()=>s});var e=o(6540);const i={},a=e.createContext(i);function r(n){const t=e.useContext(a);return e.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),e.createElement(a.Provider,{value:t},n.children)}}}]);