"use strict";(self.webpackChunkfused_docs=self.webpackChunkfused_docs||[]).push([[1433],{4757:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>u,toc:()=>d});var o=t(4848),i=t(8453),s=t(8987),r=t(1023);t(290);const a={title:"Long-running jobs",sidebar_label:"Long-running jobs",path:"basics/tutorials/longrunning/longrunning",nb_path:"basics/tutorials/longrunning.ipynb",github:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/longrunning.ipynb",colab:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/longrunning.ipynb",description:"Tutorial on how to execute long-running jobs with the batch modality."},l="Execute a long-running job",u={id:"basics/tutorials/longrunning/Longrunning",title:"Long-running jobs",description:"Tutorial on how to execute long-running jobs with the batch modality.",source:"@site/docs/basics/tutorials/longrunning/Longrunning.mdx",sourceDirName:"basics/tutorials/longrunning",slug:"/basics/tutorials/longrunning/",permalink:"/basics/tutorials/longrunning/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Long-running jobs",sidebar_label:"Long-running jobs",path:"basics/tutorials/longrunning/longrunning",nb_path:"basics/tutorials/longrunning.ipynb",github:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/longrunning.ipynb",colab:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/longrunning.ipynb",description:"Tutorial on how to execute long-running jobs with the batch modality."},sidebar:"tutorialSidebar",previous:{title:"Login",permalink:"/basics/tutorials/login/"},next:{title:"Create gif",permalink:"/basics/tutorials/noaa/"}},c={},d=[{value:"1. Define UDF",id:"1-define-udf",level:2},{value:"2. Run UDF as a batch job",id:"2-run-udf-as-a-batch-job",level:2},{value:"3. Monitor job",id:"3-monitor-job",level:2}];function p(n){const e={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.A,{githubUrl:"https://github.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/longrunning.ipynb",colabUrl:"https://githubtocolab.com/fusedio/fused-docs/blob/main/docs/basics/tutorials/longrunning.ipynb"}),"\n",(0,o.jsx)(e.h1,{id:"execute-a-long-running-job",children:"Execute a long-running job"}),"\n",(0,o.jsx)(e.p,{children:"Follow these steps to execute a long-running job using the fused-py library."}),"\n",(0,o.jsx)(e.p,{children:"Running long processes can be challenging due to potential interruptions like browser\nclosures or network issues. The fused-py library can help manage and execute these tasks\nefficiently in batch jobs, which run on dedicated and customizable EC2 instances."}),"\n",(0,o.jsx)(e.p,{children:"As an example, this guide will walk you through setting up and running a long-running\njob that unzips a large file and uploads it to S3. Because unzipping large files is\nexpected to be a long-running job, Fused recommends running a UDF as a batch job, with\ncan be triggered and observed from a Python notebook."}),"\n",(0,o.jsxs)(e.p,{children:["The following sample UDF downloads a zipped file from S3 file specified with the\n",(0,o.jsx)(e.code,{children:"source_s3_path"})," parameter, unzips it, then uploads it to a target S3 location specified\nwith the ",(0,o.jsx)(e.code,{children:"destination_s3_path"})," parameter. You can modify it to serve your usecase."]}),"\n",(0,o.jsx)(e.p,{children:"A few notes to keep in mind:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["For ",(0,o.jsx)(e.code,{children:"fused.run"})," to execute successfully on an EC2 instance, you'll need to set the\nparameter ",(0,o.jsx)(e.code,{children:"engine='batch'"})," and ensure your Fused account has batch-mode enabled. You\ncan get in touch with the Fused team for this."]}),"\n",(0,o.jsx)(e.li,{children:"To get started quickly, you can use the S3 bucket namespace that Fused provides for\nyou for free when you create an account. You can find the path in your Workbench file\nexplorer."}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"1-define-udf",children:"1. Define UDF"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"import fused\n\n@fused.udf\ndef udf(\n    source_s3_path = '',\n    destination_s3_path = ''\n):\n    import zipfile\n    import s3fs\n    import os\n    import pandas as pd\n    \n    file_path = fused.download(source_s3_path, source_s3_path.split('/')[-1])\n    \n    # Create a temporary directory to extract the files\n    s3 = s3fs.S3FileSystem()\n    with zipfile.ZipFile(file_path, 'r') as zip_ref:\n        zip_ref.extractall('/tmp/unzipped_files')\n\n    # Upload each file to the S3 bucket\n    for root, dirs, files in os.walk('/tmp/unzipped_files'):\n        for file in files:\n            file_path = os.path.join(root, file)\n            print('file_path', file_path, destination_s3_path)\n            s3.put(file_path, destination_s3_path)\n\n    return pd.DataFrame({'status': ['success']}) # UDFs must return a table or raster\n\n"})}),"\n",(0,o.jsx)(e.h2,{id:"2-run-udf-as-a-batch-job",children:"2. Run UDF as a batch job"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:"job_id = fused.run(udf, engine='batch', source_s3_path = 'https://datadownload-production.s3.amazonaws.com/WCMC_carbon_tonnes_per_ha.zip', destination_s3_path = 's3://fused-users/fused/plinio/dswid/WCMC_carbon_tonnes_per_ha_10gb/')\njob_id\n"})}),"\n",(0,o.jsx)(e.h2,{id:"3-monitor-job",children:"3. Monitor job"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'fused.api.job_tail_logs("df335890-4406-4832-bf93-6a3b092e496d")\n'})}),"\n",(0,o.jsx)(r.A,{children:"Logs for: df335890-4406-4832-bf93-6a3b092e496d\nConfiguring packages and waiting for logs..."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python"})})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(p,{...n})}):p(n)}},1023:(n,e,t)=>{t.d(e,{A:()=>h});t(6540);var o,i=new Uint8Array(16);function s(){if(!o&&!(o="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return o(i)}const r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const a=function(n){return"string"==typeof n&&r.test(n)};for(var l=[],u=0;u<256;++u)l.push((u+256).toString(16).substr(1));const c=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=(l[n[e+0]]+l[n[e+1]]+l[n[e+2]]+l[n[e+3]]+"-"+l[n[e+4]]+l[n[e+5]]+"-"+l[n[e+6]]+l[n[e+7]]+"-"+l[n[e+8]]+l[n[e+9]]+"-"+l[n[e+10]]+l[n[e+11]]+l[n[e+12]]+l[n[e+13]]+l[n[e+14]]+l[n[e+15]]).toLowerCase();if(!a(t))throw TypeError("Stringified UUID is invalid");return t};const d=function(n,e,t){var o=(n=n||{}).random||(n.rng||s)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,e){t=t||0;for(var i=0;i<16;++i)e[t+i]=o[i];return e}return c(o)};var p=t(4848);const h=n=>(0,p.jsxs)("div",{style:{backgroundColor:"var(--ifm-background-surface-color)",marginBottom:"var(--ifm-leading)",borderRadius:"var(--ifm-global-radius)",boxShadow:"var(--ifm-global-shadow-lw)",overflow:"hidden",padding:"10px",font:"var(--ifm-code-font-size) / var(--ifm-pre-line-height) var(--ifm-font-family-monospace)"},children:[(0,p.jsx)("span",{style:{color:"var(--ifm-color-primary)"},children:"Out: "}),(0,p.jsx)("pre",{style:{margin:"0px",backgroundColor:"inherit"},children:n.children.split("\n").map((n=>(0,p.jsx)("p",{style:{marginBottom:"0px"},children:n},d())))})]})},8987:(n,e,t)=>{t.d(e,{A:()=>s});t(6540);var o=t(8774),i=t(4848);const s=n=>{let{githubUrl:e,colabUrl:t}=n;return(0,i.jsxs)("div",{className:"link-buttons",style:{textAlign:"right"},children:[(0,i.jsx)("br",{}),(0,i.jsx)(o.A,{to:t,children:(0,i.jsx)("img",{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open in Colab"})})," ",(0,i.jsx)(o.A,{to:e,children:(0,i.jsx)("img",{src:"https://badgen.net/static/GitHub/Open/blue?icon=github",alt:"Open in GitHub"})})]})}},290:(n,e,t)=>{t(6540);var o=t(3259),i=t.n(o),s=(t(2303),t(4848));i()({loader:()=>t.e(1236).then(t.bind(t,1236)),loading:n=>{let{timedOut:e}=n;return e?(0,s.jsx)("blockquote",{children:"Error: Loading Plotly timed out."}):(0,s.jsx)("div",{children:"loading..."})},timeout:1e4})},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>a});var o=t(6540);const i={},s=o.createContext(i);function r(n){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);